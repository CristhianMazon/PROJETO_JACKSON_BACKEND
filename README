# 💻 API Backend - Trabalho Acadêmico  
Este repositório contém o projeto final da disciplina de **Desenvolvimento Backend**, focado na construção de uma **API RESTful robusta, modular e segura** utilizando a stack Node.js com JavaScript e banco de dados relacional MySQL.

---

## 📌 Objetivo  
O projeto tem como finalidade oferecer um sistema completo de e-commerce com funcionalidades como autenticação de usuários, gerenciamento de produtos, categorias, pedidos, controle de estoque e transações. A aplicação foi construída com foco em segurança, modularidade e boas práticas de organização de código.

---

## 🛠️ Tecnologias Utilizadas  
- Node.js  
- Express.js  
- MySQL  
- Sequelize  
- bcryptjs  
- jsonwebtoken (JWT)  
- dotenv  
- Swagger (swagger-jsdoc + swagger-ui-express)  
- Nodemon (em desenvolvimento)

---

## 📁 Estrutura de Diretórios  

```text
📦 PROJETO_JACKSON_BACKEND
├── 📁 src
│   ├── 📁 config        → Configuração do banco de dados
│   ├── 📁 controllers   → Lógica das rotas (CRUD e autenticação)
│   ├── 📁 models        → Definições das entidades (ORM Sequelize)
│   ├── 📁 middlewares   → Autenticação e validações
│   ├── 📁 routes        → Definições das rotas da API
│   ├── 📁 docs          → Configuração da documentação Swagger
│   ├── 📁 utils         → Scripts auxiliares (ex: população do banco)
│   ├── 📄 app.js        → Configuração do Express e middlewares globais
│   └── 📄 server.js     → Inicialização do servidor e conexão com o banco
├── 📄 .env.example      → Exemplo de variáveis de ambiente
├── 📄 package.json      → Dependências e scripts
└── 📄 package-lock.json → Gerenciamento de dependências
```

---

## 🚀 Como Executar  

Clone o repositório:

```bash
git clone https://github.com/CristhianMazon/PROJETO_JACKSON_BACKEND.git
cd PROJETO_JACKSON_BACKEND
```

Instale as dependências:

```bash
npm install
```

Crie um arquivo `.env` com as configurações abaixo:

```env
PORT=3000
JWT_SECRET=sua_chave_secreta_jwt
DB_NAME=api_ecommerce_db
DB_USER=root
DB_PASSWORD=
DB_HOST=localhost
```

Crie o banco de dados `api_ecommerce_db` no MySQL Workbench (ou similar).  
Em seguida, execute o script de população:

```bash
npm run populate
```

Inicie o servidor da API:

```bash
npm run dev
```

---

## 📚 Observações  
- Documentação interativa disponível em: [http://localhost:3000/api-docs](http://localhost:3000/api-docs)  
- Usuário de teste:  
  - **Email:** `cris@example.com`  
  - **Senha:** `123456`  
- Operações críticas usam transações SQL com Sequelize  
- Autenticação segura com JWT  
- Senhas criptografadas com bcryptjs  
- Comentários no código explicam toda a lógica dos endpoints

---

## 🧑‍💻 Autor  
**Cristhian Silveira Mazon**  
📧 cristhian.mazon@gmail.com
